!/usr/bin/env sh

# bsp or float (default: bsp)
#yabai -m config layout bsp

# custom space names for my 3 monitor setup
yabai -m space 1 --label one
yabai -m space 2 --label two
yabai -m space 3 --label three
yabai -m space 4 --label four

# float system preferences; disable Yabai from resizing them.
yabai -m rule --add app="^System Preferences$" sticky=on layer=above manage=off
yabai -m rule --add app="^Finder$" sticky=on layer=above manage=off

# global settings
#yabai -m config mouse_follows_focus off
#yabai -m config focus_follows_mouse autoraise
#yabai -m config focus_follows_mouse off
yabai -m config window_placement second_child
yabai -m config window_topmost on
#yabai -m config window_shadow float
yabai -m config window_opacity off
yabai -m config window_opacity_duration 0.00
yabai -m config active_window_opacity 1.0
#yabai -m config normal_window_opacity 0.93
#yabai -m config window_border off

# some other settings
yabai -m config auto_balance on
yabai -m config split_ratio 0.50
# set mouse interaction modifier key
yabai -m config mouse_modifier ctrl
# set modifier + right-click drag to resize window
yabai -m config mouse_action2 resize
# set modifier + left-click drag to resize window
yabai -m config mouse_action1 move

# general space settings
yabai -m config layout bsp
yabai -m config top_padding 6
yabai -m config bottom_padding 6
yabai -m config left_padding 6
yabai -m config right_padding 6
yabai -m config window_gap 4

# Limelight addon (kill it and start it each time Yabai starts)
killall limelight &>/dev/null
/usr/local/bin/limelight  &>/dev/null &

# Ubersicht widget bar stuff
#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"

#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"

# signals
#yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
#yabai -m signal --add event=space_changed action="yabai -m window --focus $(yabai -m query --windows --window | jq ".id")"
#yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# if i close the active window, focus on any other visible window
yabai -m signal --add event=window_destroyed action="bash /Users/jdarma/CustomScripts/SwitchSpaces/window-focus-on-destroy.sh"
#yabai -m signal --add event=space_changed action="export CUR_ACTIVE_APP=\"iTerm2\""

echo "yabai configuration loaded.."
